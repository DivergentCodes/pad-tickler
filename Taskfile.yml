# https://taskfile.dev

version: "3"

vars:
  ALG: "AES-128-CBC"
  PLAINTEXT: "Hello, world!"
  CIPHERTEXT_B64: "L4GNQGz48epdIiVCc2MboZqx/iwet7WGlZu2Rt7haGs="

tasks:
  default:
    cmds:
      - "uv run python -m pad_tickler"

  install:
    cmds:
      - uv sync --group dev --group demo
      - uv pip install -e .

  lint:
    cmds:
      - uv run ruff check .
      - uv run ruff format --check .

  demo-api:
    cmds:
      - uv run padtickler-demo-api

  demo1:
    cmds:
      - uv run padtickler demo1

  demo2:
    cmds:
      - uv run padtickler demo2

  demo3:
    cmds:
      - uv run padtickler demo3

  demo-encrypt:
    cmds:
      - 'curl -s -X POST http://localhost:8000/api/encrypt -H "Content-Type: application/json" -d "{\"plaintext\": \"{{.PLAINTEXT}}\"}" | jq'

  demo-validate:
    cmds:
      - 'curl -s -X POST http://localhost:8000/api/validate -H "Content-Type: application/json" -d "{\"alg\": \"{{.ALG}}\", \"ciphertext_b64\": \"{{.CIPHERTEXT_B64}}\"}" | jq'

  build:
    cmds:
      - uv build

  release-dry-run:
    cmds:
      - uv run semantic-release version --dry-run

  release-local:
    cmds:
      - uv run semantic-release version

  install:test-pypi:
    cmds:
      - pip install -i https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ padtickler

  clean:
    cmds:
      - "rm -rf __pycache__"
      - "rm -rf demo_api/__pycache__"
      - "rm -rf pad_tickler/__pycache__"
      - "rm -rf .pytest_cache"
      - "rm -rf .ruff_cache"
      - "rm -rf .venv"
      - "rm -rf dist/"
      - "rm -rf *.egg-info/"
